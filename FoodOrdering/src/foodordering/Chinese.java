/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Chinese.java
 *
 * Created on Dec 24, 2021, 3:07:02 PM
 */

package foodordering;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author zedso
 */
public class Chinese extends javax.swing.JFrame {

    double Price_Fries = 60; // we are making prices here for the products( still not connected with anything)
    double Price_Onion = 90;
    double Price_Caesar = 150;
    double Price_Veggie = 100;
    double Price_Chicken = 160;
    double Price_Spicy = 160;
    double Price_Mexicana = 160;
    double Price_Crispy = 160;
    double Price_Hash = 80;
    double Price_IceC = 50;
    double Price_Nutella = 100;
    double Price_Muffin = 150;
    double Price_Pancakes = 150;
    double Price_Cola = 60;
    double Price_Pepsi = 60;
    double Price_Orange = 50;
    double Price_Coffee = 30;
    double Price_Vanilla = 80;
    double Price_Strawberry = 80;
    double Price_Chocolate = 80;
    double Price_Cone = 80;
    double Tax_Rate = 30;

    double iTax,iTotal,iSubTotal,iChange,iCost; // making doubles for the total,tax,subtotal etc.

    double[] itemcost = new double[22]; // array initializer for the next points




    /** Creates new form Chinese */
    public Chinese() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop1 = new javax.swing.JPanel();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        Hash = new javax.swing.JTextField();
        IceC = new javax.swing.JTextField();
        Muffin = new javax.swing.JTextField();
        Pancakes = new javax.swing.JTextField();
        Nutella = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ChkFries = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        Fries = new javax.swing.JTextField();
        Onion = new javax.swing.JTextField();
        Veggie = new javax.swing.JTextField();
        Caesar = new javax.swing.JTextField();
        Spicy = new javax.swing.JTextField();
        Chicken = new javax.swing.JTextField();
        Mexicana = new javax.swing.JTextField();
        Crispy = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        cmbPaymentMethod = new javax.swing.JLabel();
        Cash = new javax.swing.JTextField();
        bTotal = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        Pepsi = new javax.swing.JTextField();
        Cola = new javax.swing.JTextField();
        Coffee = new javax.swing.JTextField();
        Orange = new javax.swing.JTextField();
        Strawberry = new javax.swing.JTextField();
        Vanilla = new javax.swing.JTextField();
        Chocolate = new javax.swing.JTextField();
        Cone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Change = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        LblTotal = new javax.swing.JLabel();
        jlblSubTotal = new javax.swing.JTextField();
        jlblTax = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jlblTotal = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        desktop1.setBackground(new java.awt.Color(153, 153, 255));
        desktop1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));

        jCheckBox9.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox9.setText("Hash Brown - 80");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        jCheckBox10.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox10.setText("Nutella Sticks - 100");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });

        jCheckBox11.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox11.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox11.setText("Ice Cream - 50");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });

        jCheckBox12.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jCheckBox12.setText("Chocolate Muffin - 150");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });

        jCheckBox13.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox13.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox13.setText("Pancakes - 150");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });

        Hash.setBackground(new java.awt.Color(153, 153, 255));
        Hash.setFont(new java.awt.Font("Tahoma", 0, 18));
        Hash.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hash.setText("0");
        Hash.setEnabled(false);
        Hash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HashActionPerformed(evt);
            }
        });
        Hash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HashKeyTyped(evt);
            }
        });

        IceC.setBackground(new java.awt.Color(153, 153, 255));
        IceC.setFont(new java.awt.Font("Tahoma", 0, 18));
        IceC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        IceC.setText("0");
        IceC.setEnabled(false);
        IceC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IceCKeyTyped(evt);
            }
        });

        Muffin.setBackground(new java.awt.Color(153, 153, 255));
        Muffin.setFont(new java.awt.Font("Tahoma", 0, 18));
        Muffin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Muffin.setText("0");
        Muffin.setEnabled(false);
        Muffin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MuffinActionPerformed(evt);
            }
        });
        Muffin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MuffinKeyTyped(evt);
            }
        });

        Pancakes.setBackground(new java.awt.Color(153, 153, 255));
        Pancakes.setFont(new java.awt.Font("Tahoma", 0, 18));
        Pancakes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Pancakes.setText("0");
        Pancakes.setEnabled(false);
        Pancakes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PancakesKeyTyped(evt);
            }
        });

        Nutella.setBackground(new java.awt.Color(153, 153, 255));
        Nutella.setFont(new java.awt.Font("Tahoma", 0, 18));
        Nutella.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nutella.setText("0");
        Nutella.setEnabled(false);
        Nutella.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NutellaKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel3.setText("Desserts");

        javax.swing.GroupLayout desktop1Layout = new javax.swing.GroupLayout(desktop1);
        desktop1.setLayout(desktop1Layout);
        desktop1Layout.setHorizontalGroup(
            desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktop1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(desktop1Layout.createSequentialGroup()
                        .addComponent(jCheckBox9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                        .addComponent(Hash, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, desktop1Layout.createSequentialGroup()
                        .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox11)
                            .addComponent(jCheckBox12)
                            .addComponent(jCheckBox13)
                            .addComponent(jCheckBox10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                        .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IceC, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Muffin, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Pancakes, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nutella, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        desktop1Layout.setVerticalGroup(
            desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, desktop1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox9)
                    .addComponent(Hash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox11)
                    .addComponent(IceC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox12)
                    .addComponent(Muffin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox13)
                    .addComponent(Pancakes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(desktop1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox10)
                    .addComponent(Nutella, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        getContentPane().add(desktop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 650, -1));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));

        ChkFries.setBackground(new java.awt.Color(153, 153, 255));
        ChkFries.setFont(new java.awt.Font("Tahoma", 1, 18));
        ChkFries.setText("Fries - 60");
        ChkFries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkFriesActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox2.setText("Onion Rings - 90");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox3.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox3.setText("Caesar Salad - 150");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox4.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox4.setText("Vegetarian Salad - 100");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox5.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox5.setText("Crispy Chicken - 160");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox6.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox6.setText("Spicy Burger - 160");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox7.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox7.setText("Chicken Burger - 160");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox8.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox8.setText("Mexicana Burger - 160");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        Fries.setBackground(new java.awt.Color(153, 153, 255));
        Fries.setFont(new java.awt.Font("Tahoma", 0, 18));
        Fries.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Fries.setText("0");
        Fries.setEnabled(false);
        Fries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FriesActionPerformed(evt);
            }
        });
        Fries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FriesKeyTyped(evt);
            }
        });

        Onion.setBackground(new java.awt.Color(153, 153, 255));
        Onion.setFont(new java.awt.Font("Tahoma", 0, 18));
        Onion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Onion.setText("0");
        Onion.setEnabled(false);
        Onion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OnionKeyTyped(evt);
            }
        });

        Veggie.setBackground(new java.awt.Color(153, 153, 255));
        Veggie.setFont(new java.awt.Font("Tahoma", 0, 18));
        Veggie.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Veggie.setText("0");
        Veggie.setEnabled(false);
        Veggie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                VeggieKeyTyped(evt);
            }
        });

        Caesar.setBackground(new java.awt.Color(153, 153, 255));
        Caesar.setFont(new java.awt.Font("Tahoma", 0, 18));
        Caesar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Caesar.setText("0");
        Caesar.setEnabled(false);
        Caesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaesarActionPerformed(evt);
            }
        });
        Caesar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CaesarKeyTyped(evt);
            }
        });

        Spicy.setBackground(new java.awt.Color(153, 153, 255));
        Spicy.setFont(new java.awt.Font("Tahoma", 0, 18));
        Spicy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Spicy.setText("0");
        Spicy.setEnabled(false);
        Spicy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SpicyKeyTyped(evt);
            }
        });

        Chicken.setBackground(new java.awt.Color(153, 153, 255));
        Chicken.setFont(new java.awt.Font("Tahoma", 0, 18));
        Chicken.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Chicken.setText("0");
        Chicken.setEnabled(false);
        Chicken.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ChickenKeyTyped(evt);
            }
        });

        Mexicana.setBackground(new java.awt.Color(153, 153, 255));
        Mexicana.setFont(new java.awt.Font("Tahoma", 0, 18));
        Mexicana.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Mexicana.setText("0");
        Mexicana.setEnabled(false);
        Mexicana.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MexicanaKeyTyped(evt);
            }
        });

        Crispy.setBackground(new java.awt.Color(153, 153, 255));
        Crispy.setFont(new java.awt.Font("Tahoma", 0, 18));
        Crispy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Crispy.setText("0");
        Crispy.setEnabled(false);
        Crispy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CrispyKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel1.setText("Fast meal and Vegetarian");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel2.setText("Burgers");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(ChkFries)
                .addGap(122, 122, 122)
                .addComponent(Fries, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jCheckBox2)
                .addGap(56, 56, 56)
                .addComponent(Onion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jCheckBox3)
                .addGap(38, 38, 38)
                .addComponent(Caesar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jCheckBox4)
                .addGap(2, 2, 2)
                .addComponent(Veggie, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jCheckBox7)
                .addGap(13, 13, 13)
                .addComponent(Chicken, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jCheckBox6)
                .addGap(39, 39, 39)
                .addComponent(Spicy, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(Crispy, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(Mexicana, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox8)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChkFries)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(Fries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(Onion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(Caesar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(Veggie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox7)
                    .addComponent(Chicken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox6)
                    .addComponent(Spicy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox5)
                    .addComponent(Crispy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Mexicana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox8)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 400, 700));

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));

        jComboBox1.setBackground(new java.awt.Color(153, 153, 255));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Debit Card", "Master Card" }));

        cmbPaymentMethod.setBackground(new java.awt.Color(153, 153, 255));
        cmbPaymentMethod.setFont(new java.awt.Font("Tahoma", 1, 18));
        cmbPaymentMethod.setText("Payment Method");

        Cash.setBackground(new java.awt.Color(153, 153, 255));
        Cash.setFont(new java.awt.Font("Tahoma", 0, 18));
        Cash.setText("0");

        bTotal.setBackground(new java.awt.Color(153, 153, 255));
        bTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bTotal.setText("Total");
        bTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(bTotal))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cash, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, 153, Short.MAX_VALUE)
                            .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(cmbPaymentMethod)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(Cash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(bTotal)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 540, -1, 300));

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 48));
        jLabel11.setText("Heart Kitchen Bar");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/foodordering/icons/Screenshot_7.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(644, 644, 644))
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(544, 544, 544))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1410, -1));

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCheckBox14.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox14.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox14.setText("Coca Cola - 60");
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, -1, -1));

        jCheckBox15.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox15.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox15.setText("Pepsi - 60");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 152, -1, -1));

        jCheckBox16.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox16.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox16.setText("Orange - 50");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 221, -1, -1));

        jCheckBox17.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox17.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox17.setText("Coffee - 30");
        jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox17ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 294, -1, -1));

        jCheckBox18.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox18.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox18.setText("Vanilla Shake - 80");
        jCheckBox18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox18ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 432, -1, -1));

        jCheckBox19.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox19.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox19.setText("Strawberry - 80");
        jCheckBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox19ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 481, -1, -1));

        jCheckBox20.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox20.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox20.setText("Chocolate - 80");
        jCheckBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox20ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 549, -1, -1));

        jCheckBox21.setBackground(new java.awt.Color(153, 153, 255));
        jCheckBox21.setFont(new java.awt.Font("Tahoma", 1, 18));
        jCheckBox21.setText("Vanilla Cone - 80");
        jCheckBox21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox21ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 613, -1, -1));

        Pepsi.setBackground(new java.awt.Color(153, 153, 255));
        Pepsi.setFont(new java.awt.Font("Tahoma", 0, 18));
        Pepsi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Pepsi.setText("0");
        Pepsi.setEnabled(false);
        Pepsi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PepsiKeyTyped(evt);
            }
        });
        jPanel6.add(Pepsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 143, -1));

        Cola.setBackground(new java.awt.Color(153, 153, 255));
        Cola.setFont(new java.awt.Font("Tahoma", 0, 18));
        Cola.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cola.setText("0");
        Cola.setEnabled(false);
        Cola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ColaKeyTyped(evt);
            }
        });
        jPanel6.add(Cola, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 143, -1));

        Coffee.setBackground(new java.awt.Color(153, 153, 255));
        Coffee.setFont(new java.awt.Font("Tahoma", 0, 18));
        Coffee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Coffee.setText("0");
        Coffee.setEnabled(false);
        Coffee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CoffeeKeyTyped(evt);
            }
        });
        jPanel6.add(Coffee, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 143, -1));

        Orange.setBackground(new java.awt.Color(153, 153, 255));
        Orange.setFont(new java.awt.Font("Tahoma", 0, 18));
        Orange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Orange.setText("0");
        Orange.setEnabled(false);
        Orange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OrangeKeyTyped(evt);
            }
        });
        jPanel6.add(Orange, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 143, -1));

        Strawberry.setBackground(new java.awt.Color(153, 153, 255));
        Strawberry.setFont(new java.awt.Font("Tahoma", 0, 18));
        Strawberry.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Strawberry.setText("0");
        Strawberry.setEnabled(false);
        Strawberry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StrawberryKeyTyped(evt);
            }
        });
        jPanel6.add(Strawberry, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 143, -1));

        Vanilla.setBackground(new java.awt.Color(153, 153, 255));
        Vanilla.setFont(new java.awt.Font("Tahoma", 0, 18));
        Vanilla.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Vanilla.setText("0");
        Vanilla.setEnabled(false);
        Vanilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VanillaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                VanillaKeyTyped(evt);
            }
        });
        jPanel6.add(Vanilla, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 143, -1));

        Chocolate.setBackground(new java.awt.Color(153, 153, 255));
        Chocolate.setFont(new java.awt.Font("Tahoma", 0, 18));
        Chocolate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Chocolate.setText("0");
        Chocolate.setEnabled(false);
        Chocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChocolateActionPerformed(evt);
            }
        });
        Chocolate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ChocolateKeyTyped(evt);
            }
        });
        jPanel6.add(Chocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 143, -1));

        Cone.setBackground(new java.awt.Color(153, 153, 255));
        Cone.setFont(new java.awt.Font("Tahoma", 0, 18));
        Cone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cone.setText("0");
        Cone.setEnabled(false);
        Cone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ConeKeyTyped(evt);
            }
        });
        jPanel6.add(Cone, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 143, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel4.setText("Drinks");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 40, -1, -1));

        jLabel5.setBackground(new java.awt.Color(153, 153, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel5.setText("Shakes");
        jPanel6.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 371, -1, -1));

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1044, 140, 370, 700));

        jPanel8.setBackground(new java.awt.Color(153, 153, 255));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 0), 4, true));

        jLabel7.setBackground(new java.awt.Color(153, 153, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel7.setText("Change");

        Change.setBackground(new java.awt.Color(153, 153, 255));
        Change.setFont(new java.awt.Font("Tahoma", 0, 18));
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(153, 153, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 18));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(153, 153, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel8.setText("Subtotal");

        jLabel9.setBackground(new java.awt.Color(153, 153, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel9.setText("Tax");

        LblTotal.setBackground(new java.awt.Color(153, 153, 255));
        LblTotal.setFont(new java.awt.Font("Tahoma", 1, 18));
        LblTotal.setText("Total");

        jlblSubTotal.setBackground(new java.awt.Color(153, 153, 255));
        jlblSubTotal.setFont(new java.awt.Font("Tahoma", 0, 18));

        jlblTax.setBackground(new java.awt.Color(153, 153, 255));
        jlblTax.setFont(new java.awt.Font("Tahoma", 0, 18));

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18));
        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jlblTotal.setBackground(new java.awt.Color(153, 153, 255));
        jlblTotal.setFont(new java.awt.Font("Tahoma", 0, 18));
        jlblTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlblTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(LblTotal)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblTax, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(btnReset)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(41, 41, 41))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LblTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 540, -1, 300));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton1.setText("Click here for Restaurant Speciality");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChkFriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkFriesActionPerformed
      if (ChkFries.isSelected())                    // checkboxes , if they are selected, textfields will be available to write something on them.
      {
          Fries.setEnabled(true);
          Fries.requestFocus();
          Fries.setText(null);
      }
 else
      {
          Fries.setEnabled(false);
          Fries.setText("0");
 }
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkFriesActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
if (jCheckBox7.isSelected())
      {
          Chicken.setEnabled(true);
          Chicken.requestFocus();
          Chicken.setText(null);
      }
 else
      {
          Chicken.setEnabled(false);
          Chicken.setText("0");
 }         // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void ChocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChocolateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChocolateActionPerformed

    private void jCheckBox18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox18ActionPerformed
if (jCheckBox18.isSelected())
      {
          Vanilla.setEnabled(true);
          Vanilla.requestFocus();
          Vanilla.setText(null);
      }
 else
      {
          Vanilla.setEnabled(false);
          Vanilla.setText("0");
 }         // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox18ActionPerformed

    private void bTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTotalActionPerformed
    itemcost[0] = Double.parseDouble(Fries.getText()) * Price_Fries ; // we use arrays, to make an order for products.
                                                                     //We use double parse double in order to connect the textfields with the codes
    itemcost[1] = Double.parseDouble(Onion.getText()) * Price_Onion;
    itemcost[2] = Double.parseDouble(Caesar.getText())* Price_Caesar;
    itemcost[3] = Double.parseDouble(Veggie.getText())* Price_Veggie;
    itemcost[4] = Double.parseDouble(Chicken.getText()) * Price_Chicken;
    itemcost[5] = Double.parseDouble(Spicy.getText()) * Price_Spicy;
    itemcost[6] = Double.parseDouble(Crispy.getText()) * Price_Crispy;
    itemcost[7] = Double.parseDouble(Mexicana.getText())* Price_Mexicana;
    itemcost[8] = Double.parseDouble(Hash.getText())*Price_Hash;
    itemcost[9] = Double.parseDouble(IceC.getText())*Price_IceC;
    itemcost[10] = Double.parseDouble(Muffin.getText())*Price_Muffin;
    itemcost[11] = Double.parseDouble(Pancakes.getText())*Price_Pancakes;
    itemcost[12] = Double.parseDouble(Nutella.getText())*Price_Nutella;
    itemcost[13] = Double.parseDouble(Cola.getText())*Price_Cola;
    itemcost[14] = Double.parseDouble(Pepsi.getText())*Price_Pepsi;
    itemcost[15] = Double.parseDouble(Orange.getText())*Price_Orange;
    itemcost[16] = Double.parseDouble(Coffee.getText())*Price_Coffee;
    itemcost[17] = Double.parseDouble(Vanilla.getText())*Price_Vanilla;
    itemcost[18] = Double.parseDouble(Strawberry.getText())*Price_Strawberry;
    itemcost[19] = Double.parseDouble(Chocolate.getText())*Price_Chocolate;
    itemcost[20] = Double.parseDouble(Cone.getText())*Price_Cone;

    iChange = Double.parseDouble(Cash.getText());

 

    String PaymentMethod = (String)jComboBox1.getSelectedItem();
    if (PaymentMethod == "Cash")
    {

   
    iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4]+ itemcost[5]
            + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14]+
            itemcost[15] + itemcost[16] + itemcost[17] + itemcost[18] + itemcost[19] + itemcost[20]; // collecting all the products everytime when you click Total button,
                                                                                                    // even if you didnt select some of the products, it will get collected again but
                                                                                                   //since its 0 it wont affect to total price.

    iTax = ( iSubTotal * Tax_Rate)/100; // simple tax formula

    if (iChange>=iSubTotal+iTax)  // if else condition for combobox sections and some basic formulas to make the other textfields fine visible for calculations.
    {
        iTax = (iSubTotal * Tax_Rate)/100; // again same tax formula

        TotalClass total2 = new TotalClass(); // total class to connect the formula from other class

    String cTax = String.format("$%.2f", iTax);
    jlblTax.setText(cTax); // tax textfield in order to show the tax calculation with dollar sign

    String cSubTotal = String.format("$%.2f", iSubTotal);
    jlblSubTotal.setText(cSubTotal);   // for subtotal textfield in order to show calculation with dollar sign

    double uTotal = new TotalClass().getTotal(); // getting the formula from the totalclass

    String cTotal = String.format("$%.2f", iSubTotal + iTax);
    jlblTotal.setText(String.valueOf(cTotal)); // total textfield in order to show the calculation with dollar sign



    String cChange = String.format("$%.2f", iChange - iSubTotal - iTax);
 Change.setText(cChange);   // change textfield in order to show the calculation with dollar sign
        }
    else 
    {
        JOptionPane.showMessageDialog(null,"Not enough cash entered ", "Heart Kitchen Bar", JOptionPane.OK_OPTION);
 }
    }
else if (PaymentMethod == "Debit Card" || PaymentMethod == "Master Card") // else if condition is the same with the if condition
    {
        iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4]+ itemcost[5]
            + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] + itemcost[12] + itemcost[13] + itemcost[14]+
            itemcost[15] + itemcost[16] + itemcost[17] + itemcost[18] + itemcost[19] + itemcost[20];

    iTax = ( iSubTotal * Tax_Rate)/100;

   String cTax = String.format("$%.2f", iTax);
    jlblTax.setText(cTax);

    String cSubTotal = String.format("$%.2f", iSubTotal);
    jlblSubTotal.setText(cSubTotal);

    double uTotal = new TotalClass().getTotal();

    String cTotal = String.format("$%.2f", iSubTotal + iTax);
    jlblTotal.setText(String.valueOf(cTotal));



    String cChange = String.format("$%.2f", iChange - iSubTotal - iTax);
 Change.setText(cChange);

 }

        // TODO add your handling code here:
    }//GEN-LAST:event_bTotalActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
Cash.setText(null); // textfields of cash, change,tax,subtotal,total
Change.setText(null);
jlblTax.setText(null);
jlblSubTotal.setText(null);
jlblTotal.setText(null);
     
                //========================
Cola.setEnabled(false); // these are the names of the textfields, when you will click reset button, it will make them unwritable
        Fries.setEnabled(false);
        Crispy.setEnabled(false);
        Pepsi.setEnabled(false);
                Chocolate.setEnabled(false);
                Muffin.setEnabled(false);
                Hash.setEnabled(false);
                Nutella.setEnabled(false);
                Chicken.setEnabled(false);
                Caesar.setEnabled(false);
                Veggie.setEnabled(false);
                Onion.setEnabled(false);
                Mexicana.setEnabled(false);
                Pancakes.setEnabled(false);
                IceC.setEnabled(false);
                Orange.setEnabled(false);
                Coffee.setEnabled(false);
                Strawberry.setEnabled(false);
                Vanilla.setEnabled(false);
                Cone.setEnabled(false);
                Spicy.setEnabled(false);
                //=======================
                Cola.setText("0"); // this code makes the textfields to be empty, (null means empty).
        Fries.setText("0");
        Crispy.setText("0");
        Pepsi.setText("0");
                Chocolate.setText("0");
                Muffin.setText("0");
                Hash.setText("0");
                Nutella.setText("0");
                Chicken.setText("0");
                Caesar.setText("0");
                Veggie.setText("0");
                Onion.setText("0");
                Mexicana.setText("0");
                Pancakes.setText("0");
                IceC.setText("0");
                Orange.setText("0");
                Coffee.setText("0");
                Strawberry.setText("0");
                Vanilla.setText("0");
                Cone.setText("0");
                Spicy.setText("0");

                //=======================
         ChkFries.setSelected(false); // this code is for checkboxes to make them deselected.
         jCheckBox2.setSelected(false);
         jCheckBox3.setSelected(false);
         jCheckBox4.setSelected(false);
         jCheckBox5.setSelected(false);
         jCheckBox6.setSelected(false);
         jCheckBox7.setSelected(false);
         jCheckBox8.setSelected(false);
         jCheckBox9.setSelected(false);
         jCheckBox10.setSelected(false);
         jCheckBox11.setSelected(false);
         jCheckBox12.setSelected(false);
         jCheckBox13.setSelected(false);
         jCheckBox14.setSelected(false);
         jCheckBox15.setSelected(false);
         jCheckBox16.setSelected(false);
         jCheckBox17.setSelected(false);
         jCheckBox18.setSelected(false);
         jCheckBox19.setSelected(false);
         jCheckBox20.setSelected(false);
         jCheckBox21.setSelected(false);
        




    }//GEN-LAST:event_btnResetActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

 

        System.exit(0); // this is exit button code
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void FriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FriesKeyTyped
    char Number = evt.getKeyChar(); // this code is for the textfields to make them only to write numbers on them, you cant write characters,letters on them thanks to this code
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_FriesKeyTyped

    private void OnionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OnionKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_OnionKeyTyped

    private void CaesarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CaesarKeyTyped
char Number = evt.getKeyChar(); //key event code is to make the textfields writable from your commands, you will tell what can be written on the textfield.
    if (!(Character.isDigit(Number)) // digit means number
        || (Number == KeyEvent.VK_BACK_SPACE) // making it available also to use backspace or delete buttons on your keyboard
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume(); // this code is for initializing it.
        }        // TODO add your handling code here:
    }//GEN-LAST:event_CaesarKeyTyped

    private void VeggieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VeggieKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_VeggieKeyTyped

    private void ChickenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChickenKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ChickenKeyTyped

    private void SpicyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SpicyKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_SpicyKeyTyped

    private void CrispyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CrispyKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_CrispyKeyTyped

    private void MexicanaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MexicanaKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_MexicanaKeyTyped

    private void HashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HashKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_HashKeyTyped

    private void IceCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IceCKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_IceCKeyTyped

    private void MuffinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MuffinKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_MuffinKeyTyped

    private void PancakesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PancakesKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_PancakesKeyTyped

    private void NutellaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NutellaKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_NutellaKeyTyped

    private void ColaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ColaKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ColaKeyTyped

    private void PepsiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PepsiKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_PepsiKeyTyped

    private void OrangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OrangeKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_OrangeKeyTyped

    private void CoffeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CoffeeKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_CoffeeKeyTyped

    private void VanillaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VanillaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_VanillaKeyReleased

    private void VanillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VanillaKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_VanillaKeyTyped

    private void StrawberryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StrawberryKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_StrawberryKeyTyped

    private void ChocolateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChocolateKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ChocolateKeyTyped

    private void ConeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConeKeyTyped
char Number = evt.getKeyChar();
    if (!(Character.isDigit(Number))
        || (Number == KeyEvent.VK_BACK_SPACE)
                || (Number ==KeyEvent.VK_DELETE)) {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ConeKeyTyped

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
if (jCheckBox2.isSelected())
      {
          Onion.setEnabled(true);
          Onion.requestFocus();
          Onion.setText(null);
      }
 else
      {
          Onion.setEnabled(false);
          Onion.setText("0");
 }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
if (jCheckBox3.isSelected())
      {
          Caesar.setEnabled(true);
          Caesar.requestFocus();
          Caesar.setText(null);
      }
 else
      {
          Caesar.setEnabled(false);
          Caesar.setText("0");
 }            // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
if (jCheckBox4.isSelected())
      {
          Veggie.setEnabled(true);
          Veggie.requestFocus();
          Veggie.setText(null);
      }
 else
      {
          Veggie.setEnabled(false);
          Veggie.setText("0");
 }           // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
    if (jCheckBox6.isSelected())
      {
          Spicy.setEnabled(true);
          Spicy.requestFocus();
          Spicy.setText(null);
      }
 else
      {
          Spicy.setEnabled(false);
          Spicy.setText("0");
 }       // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
    if (jCheckBox5.isSelected())
      {
          Crispy.setEnabled(true);
          Crispy.requestFocus();
          Crispy.setText(null);
      }
 else
      {
          Crispy.setEnabled(false);
          Crispy.setText("0");
 }     // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
      if (jCheckBox8.isSelected())
      {
          Mexicana.setEnabled(true);
          Mexicana.requestFocus();
          Mexicana.setText(null);
      }
 else
      {
          Mexicana.setEnabled(false);
          Mexicana.setText("0");
 }     // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void HashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HashActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
      if (jCheckBox9.isSelected())
      {
          Hash.setEnabled(true);
          Hash.requestFocus();
          Hash.setText(null);
      }
 else
      {
          Hash.setEnabled(false);
          Hash.setText("0");
 }  // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
        if (jCheckBox9.isSelected())
      {
          IceC.setEnabled(true);
          IceC.requestFocus();
          IceC.setText(null);
      }
 else
      {
          IceC.setEnabled(false);
          IceC.setText("0");
 }// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
         if (jCheckBox12.isSelected())
      {
          Muffin.setEnabled(true);
          Muffin.requestFocus();
          Muffin.setText(null);
      }
 else
      {
          Muffin.setEnabled(false);
          Muffin.setText("0");
 }// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
        if (jCheckBox13.isSelected())
      {
          Pancakes.setEnabled(true);
          Pancakes.requestFocus();
          Pancakes.setText(null);
      }
 else
      {
          Pancakes.setEnabled(false);
          Pancakes.setText("0");
 }// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        if (jCheckBox10.isSelected())
      {
          Nutella.setEnabled(true);
          Nutella.requestFocus();
          Nutella.setText(null);
      }
 else
      {
          Nutella.setEnabled(false);
          Nutella.setText("0");
 }// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
      if (jCheckBox14.isSelected())
      {
          Cola.setEnabled(true);
          Cola.requestFocus();
          Cola.setText(null);
      }
 else
      {
          Cola.setEnabled(false);
          Cola.setText("0");
 }  // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
       if (jCheckBox15.isSelected())
      {
          Pepsi.setEnabled(true);
          Pepsi.requestFocus();
          Pepsi.setText(null);
      }
 else
      {
          Pepsi.setEnabled(false);
          Pepsi.setText("0");
 } // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
       if (jCheckBox16.isSelected())
      {
          Orange.setEnabled(true);
          Orange.requestFocus();
          Orange.setText(null);
      }
 else
      {
          Orange.setEnabled(false);
          Orange.setText("0");
 }  // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
if (jCheckBox17.isSelected())
      {
          Coffee.setEnabled(true);
          Coffee.requestFocus();
          Coffee.setText(null);
      }
 else
      {
          Coffee.setEnabled(false);
          Coffee.setText("0");
 }        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox17ActionPerformed

    private void jCheckBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox19ActionPerformed
     if (jCheckBox19.isSelected())
      {
          Strawberry.setEnabled(true);
          Strawberry.requestFocus();
          Strawberry.setText(null);
      }
 else
      {
          Strawberry.setEnabled(false);
          Strawberry.setText("0");
 }   // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox19ActionPerformed

    private void jCheckBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox20ActionPerformed
       if (jCheckBox20.isSelected())
      {
          Chocolate.setEnabled(true);
          Chocolate.requestFocus();
          Chocolate.setText(null);
      }
 else
      {
          Chocolate.setEnabled(false);
          Chocolate.setText("0");
 } // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox20ActionPerformed

    private void jCheckBox21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox21ActionPerformed
     if (jCheckBox21.isSelected())
      {
          Cone.setEnabled(true);
          Cone.requestFocus();
          Cone.setText(null);
      }
 else
      {
          Cone.setEnabled(false);
          Cone.setText("0");
 }   // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox21ActionPerformed

    private void jlblTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlblTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jlblTotalActionPerformed

    private void FriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FriesActionPerformed

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChangeActionPerformed

    private void MuffinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MuffinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MuffinActionPerformed

    private void CaesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaesarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CaesarActionPerformed


        public void close() {
            WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
        }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    close(); // for the current menu to be closed
      

    Pizzeria pizza = new Pizzeria(); // making object to be able to use it as code.
    pizza.setVisible(true); // using this code to make it visible when you will click to this button.

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chinese().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Caesar;
    private javax.swing.JTextField Cash;
    private javax.swing.JTextField Change;
    private javax.swing.JTextField Chicken;
    private javax.swing.JCheckBox ChkFries;
    private javax.swing.JTextField Chocolate;
    private javax.swing.JTextField Coffee;
    private javax.swing.JTextField Cola;
    private javax.swing.JTextField Cone;
    private javax.swing.JTextField Crispy;
    private javax.swing.JTextField Fries;
    private javax.swing.JTextField Hash;
    private javax.swing.JTextField IceC;
    private javax.swing.JLabel LblTotal;
    private javax.swing.JTextField Mexicana;
    private javax.swing.JTextField Muffin;
    private javax.swing.JTextField Nutella;
    private javax.swing.JTextField Onion;
    private javax.swing.JTextField Orange;
    private javax.swing.JTextField Pancakes;
    private javax.swing.JTextField Pepsi;
    private javax.swing.JTextField Spicy;
    private javax.swing.JTextField Strawberry;
    private javax.swing.JTextField Vanilla;
    private javax.swing.JTextField Veggie;
    private javax.swing.JButton bTotal;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel cmbPaymentMethod;
    private javax.swing.JPanel desktop1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jlblSubTotal;
    private javax.swing.JTextField jlblTax;
    private javax.swing.JTextField jlblTotal;
    // End of variables declaration//GEN-END:variables

}
